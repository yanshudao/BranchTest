<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.zd.dao.ZdPublishDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.zd.entity.ZdPublishEntity" id="zdPublishMap">
        <result property="id" column="id_"/>
        <result property="orgCode" column="org_code"/>
        <result property="fromOrgCode" column="from_org_code"/>
        <result property="toOrgCode" column="to_org_code"/>
        <result property="publishNo" column="publish_No"/>
        <result property="publishName" column="publish_Name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="mayang" column="mayang"/>
        <result property="shiyang" column="shiyang"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="semesterCode" column="semester_code"/>
        <result property="publishType" column="publish_type"/>
        <result property="logisticType" column="logistic_type"/>
        <result property="logisticNo" column="logistic_no"/>
        <result property="logisticCompany" column="logistic_company"/>
        <result property="logisticBag" column="logistic_bag"/>
        <result property="logisticPerson" column="logistic_person"/>
        <result property="logisticTelphone" column="logistic_telphone"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="enable" column="enable_"/>
        <result property="remark" column="remark_"/>
    </resultMap>

    <resultMap type="io.renren.modules.zd.vo.PublishVO" id="zdPublishMap1">
        <result property="id" column="id_"/>
        <result property="publishNo" column="publish_no"/>
        <result property="publishName" column="publish_name"/>
        <result property="logisticNo" column="logistic_no"/>
        <result property="fromOrgName" column="from_Org_Name"/>
        <result property="toOrgName" column="to_Org_Name"/>
        <result property="semesterName" column="semester_name"/>
        <result property="numberCourse" column="number_course"/>
        <result property="numberAll" column="number_all"/>
        <result property="realAll" column="real_all"/>
        <result property="mayngAll" column="mayng_all"/>
        <result property="shiyang" column="shiyang_all"/>
        <result property="createBy" column="create_by"/>
        <result property="createName" column="create_name"/>
        <result property="createTime" column="create_time"/>
        <result property="status" column="status"/>
        <result property="logisticCompany" column="logistic_company"/>
        <result property="logisticPerson" column="logistic_person"/>
        <result property="logisticTelphone" column="logistic_telphone"/>
        <result property="receiver" column="receiver"/>
        <result property="mobile" column="mobile"/>
        <result property="address" column="address"/>
    </resultMap>


    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 01 20:20:41 CST 2018.
        -->
        id_, org_code, from_org_code, to_org_code, pulish_sn, pulish_name, create_by, create_time,
        mayang, shiyang, status, del_flag, semester_code, publish_type, logistic_type, logistic_no,
        logistic_company, logistic_bag, update_by, update_time, enable_, remark_
    </sql>



    <select id="selectByLimit" resultMap="zdPublishMap">
        select * from zd_publish where id_ = #{params.id}

    </select>


    <select id="queryPublishList" resultMap="zdPublishMap1">
        SELECT p.*,SUM(pr.`publish_num`)number_all,sum(if(p.status!="1",pr.real_num,0))real_all,
        sum(pr.mayng)mayng_All,
        sum(pr.shiyang)shiyang_all,
        count(pr.id_)number_course,(select g.org_name from sys_org g where
        p.from_org_code = g.org_code ) as from_org_name,(select g.org_name from sys_org g where
        p.to_org_code = g.org_code ) as to_org_name,
        (select s.name from sys_semester s where s.semester_code=p.semester_Code)semester_name,
        (select u.realname from sys_user u where u.user_id=p.create_by)create_name
        FROM zd_publish p
        LEFT JOIN zd_publish_resource pr ON p.id_=pr.`publish_id`
        WHERE 1=1
        <if test="params.publishNo!=null and params.publishNo!=''">
            and (p.publish_no like concat('%',#{params.publishNo},'%') or
            p.publish_no like concat('%',#{params.publishNo},'%'))
        </if>
        <if test="params.toOrgCode!=null and params.toOrgCode!=''">
            and p.to_org_code=#{params.toOrgCode}
        </if>
        <if test="params.semesterCode!=null and params.semesterCode!=''">
            and p.semester_Code=#{params.semesterCode}
        </if>
        <if test="params.fromOrgCode!=null and params.fromOrgCode!=''">
            and p.from_org_code=#{params.fromOrgCode}
        </if>
        <if test="params.status!=null and params.status!=''">
            and p.status=#{params.status}
        </if>
        GROUP BY p.id_
        order by p.create_time desc
       <!-- select * from (select a.id_,a.logistic_no,a.semester_code,a.org_code,(select g.org_name from sys_org g where
        a.org_code = g.org_code ) as org_name ,(select r.name from sys_semester r where a.semester_code =
        r.semester_code) as semester_name, (select count(*) from zd_publish_resource e where e.publish_id = a.id_) as
        number_course , (select sum(publish_num) from zd_publish_resource e where e.publish_id = a.id_) as number_all,
        (select sum(publish_num * mayng) from zd_publish_resource e where e.publish_id = a.id_) as mayng_all
        ,(select user.realname from sys_user user where user.user_id = a.create_by ) as create_by,a.create_time,a.`status` ,a.logistic_company,(select u.person from sys_org_setting u where
        a.org_code = u.org_code) as receiver,(select u.tel_phone from sys_org_setting u where a.org_code = u.org_code)
        as mobile,(select u.address from sys_org_setting u where a.org_code = u.org_code) as address from zd_publish a )
        b where 1 = 1
        <if test="params.semesterName!=null and params.semesterName!=''">
            and b.semester_name = #{params.semesterName}

        </if>
        <if test="params.semesterCode!=null and params.semesterCode!=''">
            and b.semester_code = #{params.semesterCode}

        </if>
        <if test="params.orgName!=null and params.orgName!=''">
            and b.org_name = #{params.orgName}
        </if>
        <if test="params.toOrgCode!=null and params.toOrgCode!=''">
            and b.to_org_name = #{params.toOrgCode}
        </if>
        <if test="params.orgCode!=null and params.orgCode!=''">
            and b.org_code = #{params.orgCode}
            and b.`status` != '4'
        </if>
        <if test="params.id!=null and params.id!=''">
            and b.id_ like concat('%',#{params.id},'%')
        </if>
        <if test="params.publishIdList!=null and params.publishIdList!=''">
            and b.id_ in ( ${params.publishIdList} )
        </if>
        <if test="params.startTime!=null and params.startTime!=''">
            <![CDATA[
         	 and #{params.startTime} <= create_time  and create_time <= #{params.endTime} 
         	]]>

        </if>
        order by create_time desc
        limit #{params.pageNo},#{params.pageSize}
-->
    </select>





    <resultMap type="io.renren.modules.search.vo.StatisticsPublishResourceVO" id="zdPublishVOMap">
        <result property="publishNo" column="publish_no"/>
        <result property="logisticNo" column="logistic_no"/>
        <result property="fromOrgName" column="from_Org_Name"/>
        <result property="toOrgName" column="to_Org_Name"/>
        <result property="semesterName" column="semester_name"/>
        <result property="totalPublish" column="total_Publish"/>
        <result property="publishCount" column="publish_count"/>
        <result property="publishPrice" column="publish_price"/>
        <result property="resourceCode" column="resource_Code"/>
        <result property="resourceName" column="resource_Name"/>
        <result property="resourceType" column="resource_Type"/>
        <result property="resourceVersion" column="resource_Version"/>
        <result property="publishCount" column="publish_Count"/>
        <result property="realCount" column="real_Count"/>
    </resultMap>
    <select id="selectStatisticsByMap" resultMap="zdPublishVOMap">

    SELECT
    r.resource_code,r.resource_name,r.resource_type,r.resource_version,
        pr.publish_price,group_concat(p.publish_no)publish_no,r.isbn,
    SUM(pr.publish_num)publish_count,SUM(pr.real_num)real_count,SUM(pr.mayng)total_Publish,
        p.logistic_no,(select g.org_name from sys_org g where
        p.from_org_code = g.org_code ) as from_org_name,(select g.org_name from sys_org g where
        p.to_org_code = g.org_code ) as to_org_name, (select s.name from sys_semester s where s.semester_code=p.semester_Code)semester_name
        FROM zd_publish_resource pr
    LEFT JOIN zd_publish p ON pr.`publish_id`=p.id_
    LEFT JOIN subject_resource r ON r.id_=pr.`resource_id`
    LEFT JOIN zd_stock st ON st.`resource_id`=pr.`resource_id` AND p.`from_org_code`=st.`org_code`
    WHERE 1=1
        <if test="params.fromOrgCode!=null and params.fromOrgCode!=''">
            and p.from_Org_Code =#{params.fromOrgCode}
        </if>
        <if test="params.publishId!=null and params.publishId!=''">
            and pr.publish_id =#{params.publishId}
        </if>
        <if test="params.publishIds!=null and params.publishIds.size()>0">
            and pr.publish_id in
            <foreach collection="params.publishIds" separator="," open="(" close=")" item="item">
                #{item}
            </foreach>
        </if>
        <if test="params.toOrgCode!=null and params.toOrgCode!=''">
           and p.to_org_code =#{params.toOrgCode}
        </if>
        <if test="params.orgCode!=null and params.orgCode!=''">
            and p.to_org_code =#{params.orgCode}
        </if>
        <if test="params.semesterCode!=null and params.semesterCode!=''">
            and p.semester_code =#{params.semesterCode}
        </if>
        <if test="params.resourceName!=null and params.resourceName!=''">
            and (r.resource_Code like concat('%',#{params.resourceName},'%')
            or r.resource_name like concat('%',#{params.resourceName},'%'))
        </if>

    GROUP BY pr.`resource_id`
    </select>

    <resultMap id="zdRefundBalanceVOMap" type="io.renren.modules.zd.vo.ZdBalancePriceVO">
        <result column="mayang" property="mayang" />
        <result column="shiyang" property="shiyang" />

    </resultMap>
    <select id="getPublishPrice" resultMap="zdRefundBalanceVOMap">
        select  SUM(rr.mayng)mayang,sum(rr.shiyang)shiyang from zd_publish_resource rr
        left join zd_publish r on r.id_=rr.publish_id
        where r.id_ in
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item.id}
        </foreach>
    </select>
    <select id="selectBySource" resultMap="zdPublishMap">
        select * from zd_publish where source_type=#{sourceType} and foreign_id=#{id}

    </select>
    <select id="getRefundLimitInfo" resultType="io.renren.modules.zd.vo.RefundLimitInfoVO">
        select
        IFNULL(a.mayang,0) totalPublishMayang,
        IFNULL(b.mayang,0)auditRefundMayang,
        ifnull(cart.mayang,0)refundTotal
         from
        (select sum(pr.mayng) mayang,p.to_org_code,p.semester_code from zd_publish p
        left join zd_publish_resource pr on p.id_=pr.publish_id
        where p.to_org_code=#{orgCode} and
        p.semester_code
        in
        <foreach collection="semesterList" separator="," open="(" item="item" close=")">
            #{item.semesterCode}
        </foreach>
        ) a
        left join
        (select sum(rr.mayang) mayang,r.from_org_code,r.semester_code from zd_refund r
        left join zd_refund_resource rr on r.id_=rr.refund_id
        where r.from_org_code=#{orgCode}
        and r.semester_code
        in
        <foreach collection="semesterList" separator="," open="(" item="item" close=")">
            #{item.semesterCode}
        </foreach>
        ) b on a.to_org_code=b.from_org_code
        left join
        (select sum(rr.price*r.cat_num) mayang,r.org_code from zd_refund_cart r
        left join subject_resource rr on r.resource_id=rr.id_
        where r.org_code=#{orgCode}
        )cart on a.to_org_code=cart.org_code


    </select>
    <select id="selectByBalanceId" resultMap="zdPublishMap">

        select a.* from zd_publish a
        left join zd_balance_publish bp on a.id_=bp.publish_id
        where bp.balance_id=#{balanceId}
    </select>
    <select id="getRefundLimitInfo2" resultType="io.renren.modules.zd.vo.RefundLimitInfoVO">
        select
        IFNULL(a.mayang,0) totalPublishMayang,
        IFNULL(b.mayang,0)auditRefundMayang,
        ifnull(cart.mayang,0)refundTotal
        from
        (select sum(pr.mayng) mayang,p.to_org_code,p.semester_code
        from zd_publish p
        left join zd_publish_resource pr on p.id_=pr.publish_id
        where p.to_org_code=#{orgCode} and p.semester_code=#{semesterCode}

        ) a
        left join
        (select sum(rr.mayang) mayang,r.from_org_code,r.semester_code from zd_refund r
        left join zd_refund_resource rr on r.id_=rr.refund_id
        where r.from_org_code=#{orgCode}
        and (r.refund_semester_code=#{semesterCode}
        or r.semester_code=#{semesterCode})
        ) b on a.to_org_code=b.from_org_code
        left join
        (
        select sum(rr.price*r.cat_num) mayang,r.org_code
        from zd_refund_cart r
        left join subject_resource rr on r.resource_id=rr.id_
        where r.org_code=#{orgCode}
        and r.refund_semester_code=#{semesterCode}
        )cart on a.to_org_code=cart.org_code
    </select>


</mapper>